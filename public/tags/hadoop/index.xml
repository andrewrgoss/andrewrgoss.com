<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hadoop on Data Engineer, Consultant, BI Developer in MarTech</title>
    <link>http://andrewrgoss.com/tags/hadoop/</link>
    <description>Recent content in Hadoop on Data Engineer, Consultant, BI Developer in MarTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andrewrgoss@gmail.com (Andrew Goss)</managingEditor>
    <webMaster>andrewrgoss@gmail.com (Andrew Goss)</webMaster>
    <lastBuildDate>Tue, 18 Oct 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://andrewrgoss.com/tags/hadoop/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2016/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Lesson Transcripts&lt;/b&gt;&lt;br&gt;
&lt;hr&gt;
&lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part1&#34;&gt;Unit_1 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; What_is_Hadoop_Part1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part2&#34;&gt;Unit_1 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; What_is_Hadoop_Part2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_2_Hadoop_Architecture_Part1&#34;&gt;Unit_2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Hadoop_Architecture_Part1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part1/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2016/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts&#34;&gt;Lesson Transcripts&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_1_What_is_Hadoop_Part1&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/-65WgvIJ5xo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Hello everyone and welcome to Hadoop Fundamentals What is Hadoop. My name is Asma Desai and I will be covering this topic.&lt;/p&gt;

&lt;p&gt;In this video we will explain what is Hadoop and what is Big Data. We will define some Hadoop-related open source projects and give some examples of Hadoop in action. Finally we will end off with some Big Data solutions and the Cloud.&lt;/p&gt;

&lt;p&gt;Imagine this scenario: You have 1GB of data that you need to process.&lt;/p&gt;

&lt;p&gt;The data is stored in a relational database in your desktop computer which has no problem handling the load. Then your company starts growing very quickly, and that data grows to 10GB, then 100GB, and you start to reach the limits of your current desktop computer.&lt;/p&gt;

&lt;p&gt;So what do you do? You scale up by investing in a larger computer, and you are then OK for a few more months. When your data grows from 1 TB to 10TB, and then 100TB, you are again quickly approaching the limits of that computer.&lt;/p&gt;

&lt;p&gt;Moreover, you are now asked to feed your application with unstructured data coming from sources like Facebook, Twitter, RFID readers, sensors, and so on. Your management wants to derive information from both the relational data and the unstructured data and wants this information as soon as possible. What should you do? Hadoop may be the answer.&lt;/p&gt;

&lt;p&gt;What is Hadoop? Hadoop is an open source project of the Apache Foundation. It is a framework written in Java originally developed by Doug Cutting who named it after his son&amp;rsquo;s toy elephant. Hadoop uses Google&amp;rsquo;s MapReduce technology as its foundation. It is optimized to handle massive quantities of data which could be structured, unstructured or semi-structured, using commodity hardware, that is, relatively inexpensive computers.&lt;/p&gt;

&lt;p&gt;This massive parallel processing is done with great performance. However, it is a batch operation handling massive amounts of data, so the response time is not immediate. Currently, in place updates are not possible in Hadoop, but appends to existing data is supported.&lt;/p&gt;

&lt;p&gt;Now, what&amp;rsquo;s the value of a system if the information it stores or retrieves is not consistent? Hadoop replicates its data across different computers, so that if one goes down, the data is processed on one of the replicated computers. Hadoop is not suitable for OnLine Transaction Processing workloads where data is randomly accessed on structured data like a relational database.&lt;/p&gt;

&lt;p&gt;Also, Hadoop is not suitable for OnLine Analytical Processing or Decision Support System workloads where data is sequentially accessed on structured data like a relational database, to generate reports that provide business intelligence. As of Hadoop version 2.6, updates are not possible, but appends are possible. Hadoop is used for Big Data. It complements OnLine Transaction Processing and OnLine Analytical Processing. It is NOT a replacement for a relational database system.&lt;/p&gt;

&lt;p&gt;So, what is Big Data? With all the devices available today to collect data, such as RFID readers, microphones, cameras, sensors, and so on, we are seeing an explosion in data being collected worldwide. Big Data is a term used to describe large collections of data (also known as datasets) that may be unstructured, and grow so large and quickly that it is difficult to manage with a regular database or statistical tools.&lt;/p&gt;

&lt;p&gt;In terms of numbers, what are we looking at? How BIG is &amp;ldquo;big data&amp;rdquo;? Well there are more than 3.2 billion internet users, and active cell phones have surpassed 7.6 billion. There are now more in-use cell phones than there are people on the planet (7.4 billion).&lt;/p&gt;

&lt;p&gt;Twitter processes 7TB of data ever day, and 600TB of data is processed by Facebook every day. Interestingly, about 80% of this data is unstructured. With this massive amount of data, businesses need fast, reliable, deeper data insight. Therefore, Big Data solutions based on Hadoop and other analytics software are becomingmore and more relevant.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part2/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_1_What_is_Hadoop_Part2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2016/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts&#34;&gt;Lesson Transcripts&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_1_What_is_Hadoop_Part2&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/PS5QSGAoLNw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;This is a list of some other open source project related to Hadoop:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eclipse is a popular IDE donated by IBM to the open-source community&lt;/li&gt;
&lt;li&gt;Lucene is a text search engine library written in Java&lt;/li&gt;
&lt;li&gt;Hbase is a Hadoop database&lt;/li&gt;
&lt;li&gt;Hive provides data warehousing tools to extract, transform and load (ETL) data, and query this data stored in Hadoop files&lt;/li&gt;
&lt;li&gt;Pig is a high level language that generates MapReduce code to analyze large data sets.&lt;/li&gt;
&lt;li&gt;Spark is a cluster computing framework&lt;/li&gt;
&lt;li&gt;ZooKeeper is a centralized configuration service and naming registry for large distributed systems&lt;/li&gt;
&lt;li&gt;Ambari manages and monitors Hadoop clusters through an intuitive web UI&lt;/li&gt;
&lt;li&gt;Avro is a data serialization system&lt;/li&gt;
&lt;li&gt;UIMA is the architecture for the development, discovery, composition and deployment for the analysis of unstructured data&lt;/li&gt;
&lt;li&gt;Yarn is a large-scale operating system for big data applications&lt;/li&gt;
&lt;li&gt;Mapreduce is a software framework for easily writing applications which processes vast amounts of data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;rsquo;s now talk about examples of Hadoop in action.&lt;/p&gt;

&lt;p&gt;Early in 2011, Watson, a super computer developed by IBM competed in the popular Question and Answer show Jeopardy!. In that contest, Watson was successful in beating the two most winning Jeopardy players. Approximately 200 million pages of text were input using Hadoop to distribute the workload for loading this information into memory.&lt;/p&gt;

&lt;p&gt;Once this information was loaded, Watson used other technologies for advanced search and analysis. In the telecommunication industry we have China Mobile, a company that built a Hadoop cluster to perform data mining on Call Data Records. China Mobile was producing 5-8 TB of these records daily. By using a Hadoop-based system they were able to process 10 times as much data as when using their old system, and at one fifth the cost.&lt;/p&gt;

&lt;p&gt;In the media we have the New York Times which wanted to host on their website all public domain articles from 1851 to 1922. They converted articles from 11 million image files (4TB) to 1.5TB of PDF documents. This was implemented by one employee who ran a job in 24 hours on a 100-instance Amazon EC2 Hadoop cluster at a very low cost.&lt;/p&gt;

&lt;p&gt;In the technology field we again have IBM with IBM ES2, and enterprise search technology based on Hadoop, Nutch, Lucene and Jaql. ES2 is designed to address unique challenges of enterprise search such as: - The Use of enterprise-specific vocabulary, abbreviations and acronyms ES2 can perform mining tasks to build Acronym libraries, Regular expression patterns, and Geo-classification rules.&lt;/p&gt;

&lt;p&gt;There are also many internet or social network companies using Hadoop such as: Yahoo, Facebook, Amazon, eBay, Twitter, StumbleUpon, Rackspace, Ning, AOL, etc. Yahoo of course is the largest production user with an application running a Hadoop cluster consisting of about 10,000 Linux machines. Yahoo is also the largest contributor to the Hadoop open source project.&lt;/p&gt;

&lt;p&gt;Now, Hadoop is not a magic bullet that solves all kinds of problems. Hadoop is not good to process transactions due to its lack random access. It is not good when the work cannot be parallelized or when there are dependencies within the data, that is, record one must be processed before record two. It is not good for low latency data access. Not good for processing lots of small files although there is work being done in this area, for example, IBM&amp;rsquo;s Adaptive MapReduce. And it is not good for intensive calculations with little data.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s move on, and talk about Big Data solutions. Big Data solutions are more than just Hadoop. They can integrate analytic solutions to the mix to derive valuable information that can combine structured legacy data with new unstructured data.&lt;/p&gt;

&lt;p&gt;Big data solutions may also be used to derive information from data in motion, for example, IBM has a product called InfoSphere Streams that can be used to quickly determine customer sentiment for a new product based on Facebook or Twitter comments.&lt;/p&gt;

&lt;p&gt;Finally we would like to end this presentation with one final thought: Cloud computing has gained a tremendous track in the past few years, and it is a perfect fit for Big Data solutions. Using the cloud, a Hadoop cluster can be setup in minutes, on demand, and it can run for as long as needed without having to pay for more than what is used.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_2_Hadoop_Architecture_Part1/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts/Unit_2_Hadoop_Architecture_Part1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2016/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts&#34;&gt;Lesson Transcripts&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_2_Hadoop_Architecture_Part1&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/8AtrYcqO5ho&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Welcome to the unit of Hadoop Fundamentals on Hadoop architecture.
I will begin with a terminology review and then cover the major components
of Hadoop. We will see what types of nodes can exist in a Hadoop cluster and talk about
how Hadoop uses replication to lessen data loss. Finally I will explain an important
feature of Hadoop called &amp;ldquo;rack awareness&amp;rdquo; or &amp;ldquo;network topology awareness&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Before we examine Hadoop components and architecture, let&amp;rsquo;s review some of the
terms that are used in this discussion. A node is simply a computer. This is typically
non-enterprise, commodity hardware for nodes that contain data. So in this example,
we have Node 1. Then we can add more nodes, such as Node 2, Node 3, and so on.
This would be called a rack. A rack is a collection of 30 or 40 nodes that are
physically stored close together and are all connected to the same network switch.
Network bandwidth between any two nodes in the same rack is greater than bandwidth
between two nodes on different racks. You will see later how Hadoop takes advantage
of this fact. A Hadoop Cluster (or just cluster from
now on) is a collection of racks.&lt;/p&gt;

&lt;p&gt;Let us now examine the pre-Hadoop 2.2 architecture. Hadoop has two major components:
- the distributed filesystem component, the main example of which is the Hadoop
Distributed File System, though other file systems, such as IBM Spectrum Scale, are supported.
- the MapReduce component, which is a framework for performing calculations on
the data in the distributed file system. Pre-Hadoop 2.2 MapReduce is referred to as MapReduce
V1 and has its own built-in resource manager and schedule. This unit covers the Hadoop
Distributed File System and MapReduce is covered separately.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s now examine the Hadoop distributed file system - HDFS
HDFS runs on top of the existing file systems on each node in a Hadoop cluster. It is not
POSIX compliant. It is designed to tolerate high component failure rate through replication
of the data. Hadoop works best with very large files. The
larger the file, the less time Hadoop spends seeking for the next data location
on disk, the more time Hadoop runs at the limit of the bandwidth of your disks.
Seeks are generally expensive operations that are useful when they only need to analyze
a small subset of your dataset. Since Hadoop is designed to run over your entire
dataset, it is best to minimize seeks by using large files. Hadoop is designed for
streaming or sequential data access rather than random access. Sequential data access
means fewer seeks, since Hadoop only seeks to the beginning of each block and begins
reading sequentially from there. Hadoop uses blocks to store a file or parts
of a file. This is shown in the figure.&lt;/p&gt;

&lt;p&gt;Let us now examine file blocks in more detail. A Hadoop block is a file on the underlying
filesystem. Since the underlying filesystem stores files as blocks, one Hadoop block may
consist of many blocks in the underlying file system. Blocks are large. They default to
64 megabytes each and most systems run with block sizes of 128 megabytes or larger. Blocks
have several advantages: Firstly, they are fixed in size. This makes
it easy to calculate how many can fit on a disk.&lt;/p&gt;

&lt;p&gt;Secondly, by being made up of blocks that can be spread over multiple nodes, a file
can be larger than any single disk in the cluster. HDFS blocks also don&amp;rsquo;t waste space.
If a file is not an even multiple of the block size, the block containing the remainder does
not occupy the space of an entire block. As shown in the figure, a 450 megabyte file with
a 128 megabyte block size consumes four blocks, but the fourth block does not consume a full
128 megabytes. Finally, blocks fit well with replication,
which allows HDFS to be fault tolerant and available on commodity hardware.
As shown in the figure: Each block is replicated to multiple nodes. For example, block 1 is
stored on node 1 and node 2. Block 2 is stored on node 1 and node 3. And block 3 is stored
on node 2 and node 3. This allows for node failure without data loss. If node 1 crashes,
node 2 still runs and has block 1&amp;rsquo;s data. In this example, we are only replicating data
across two nodes, but you can set replication to be across many more nodes by changing Hadoop&amp;rsquo;s
configuration or even setting the replication factor for each individual file.&lt;/p&gt;

&lt;p&gt;The second major component of Hadoop, described in detail in another lecture, is the MapReduce
component. HDFS was based on a paper Google published about their Google File System,
Hadoop&amp;rsquo;s MapReduce is inspired by a paper Google published on the MapReduce technology.
It is designed to process huge datasets for certain kinds of distributable problems using
a large number of nodes. A MapReduce program consists of two types of transformations that
can be applied to data any number of times - a map transformation and a reduce transformation.
A MapReduce job is an executing MapReduce program that is divided into map tasks that
run in parallel with each other and reduce tasks that run in parallel with each other.
Let us examine the main types of nodes in pre-Hadoop 2.2. They are classified as HDFS
or MapReduce V1 nodes. For HDFS nodes we have the NameNode, and the DataNodes. For MapReduce
V1 nodes we have the JobTracker and the TaskTracker nodes. Each of these is discussed in more
detail later in this presentation. There are other HDFS nodes such as the Secondary NameNode,
Checkpoint node, and Backup node that are not discussed in this course. This diagram
shows some of the communication paths between the different types of nodes on the system.
A client is shown as communicating with a JobTracker. It can also communicate with the
NameNode and with any DataNode.&lt;/p&gt;

&lt;p&gt;There is only one NameNode in the cluster. While the data that makes up a file is stored
in blocks at the data nodes, the metadata for a file is stored at the NameNode. The
NameNode is also responsible for the filesystem namespace. To compensate for the fact that
there is only one NameNode, one should configure the NameNode to write a copy of its state
information to multiple locations, such as a local disk and an NFS mount. If there is
one node in the cluster to spend money on the best enterprise hardware for maximum reliability,
it is the NameNode. The NameNode should also have as much RAM as possible because it keeps
the entire filesystem metadata in memory.&lt;/p&gt;

&lt;p&gt;A typical HDFS cluster has many DataNodes. DataNodes store the blocks of data and blocks
from different files can be stored on the same DataNode. When a client requests a file,
the client finds out from the NameNode which DataNodes stored the blocks that make up that
file and the client directly reads the blocks from the individual DataNodes. Each DataNode
also reports to the NameNode periodically with the list of blocks it stores. DataNodes
do not require expensive enterprise hardware or replication at the hardware layer. The
DataNodes are designed to run on commodity hardware and replication is provided at the
software layer.&lt;/p&gt;

&lt;p&gt;A JobTracker node manages MapReduce V1 jobs. There is only one of these on the cluster.
It receives jobs submitted by clients. It schedules the Map tasks and Reduce tasks on
the appropriate TaskTrackers, that is where the data resides, in a rack-aware manner and
it monitors for any failing tasks that need to be rescheduled on a different
TaskTracker. To achieve the parallelism for your map and reduce tasks, there are many
TaskTrackers in a Hadoop cluster. Each TaskTracker spawns Java Virtual Machines to run your map
or reduce task. It communicates with the JobTracker and reads blocks from DataNodes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2016/big-data-university--hadoop-101/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/big-data-university--hadoop-101/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;b&gt;Course Code&lt;/b&gt;: BD0111EN&lt;br&gt;
&lt;a href=&#34;https://bigdatauniversity.com/courses/introduction-to-hadoop&#34; target=&#34;_blank&#34;&gt;Course Link&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://my.imdemocloud.com&#34; target=&#34;_blank&#34;&gt;IBM Analytics Demo Cloud&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/page/big_data_university_hadoop_101/lesson_transcripts&#34;&gt;Lesson Transcripts&lt;/a&gt;
&lt;hr&gt;
Reinforcing some of the basics of Apache Hadoop, a free, open source, Java-based programming framework. Topics in this course include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hadoop&amp;rsquo;s architecture and core components, such as MapReduce and the Hadoop Distributed File System (HDFS).&lt;/li&gt;
&lt;li&gt;Adding/removing nodes from Hadoop clusters, how to check available disk space on each node, and how to modify configuration parameters.&lt;/li&gt;
&lt;li&gt;Other Apache projects that are part of the Hadoop ecosystem, including Pig, Hive, HBase, ZooKeeper, Oozie, Sqoop, Flume, among others.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>